/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template

/**
/* @author julio carrasquilla
/* @author brayan alvarez maecha
/* @author jennifer montoya perez
/* @author daniel tamayo rodriguez
package proyecto;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 * La clase Main genera los reportes a partir de los archivos generados por GenerateInfoFiles.
 */
public class Main {

    public static void main(String[] args) {
        try {
            generateSalesReports();
            generateOverallReport();
            System.out.println("Reportes generados correctamente.");
        } catch (IOException e) {
            System.out.println("Ocurri√≥ un error al generar los reportes.");
            e.printStackTrace();
        }
    }

    /**
     * Genera un reporte de ventas por cada vendedor a partir de sus archivos de ventas.
     */
    private static void generateSalesReports() throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader("vendedores/info_vendedores.txt"));
        String line;
        while ((line = reader.readLine()) != null) {
            String[] vendorInfo = line.split(";");
            long id = Long.parseLong(vendorInfo[1]);
            BufferedReader salesReader = new BufferedReader(new FileReader("ventas/ventas_" + id + ".txt"));

            // Generar el reporte de ventas para este vendedor
            FileWriter reportWriter = new FileWriter("reportes/reporte_" + id + ".txt");
            reportWriter.write("Reporte de Ventas para Vendedor: " + vendorInfo[2] + " " + vendorInfo[3] + "\n");
            reportWriter.write("ID de Vendedor: " + id + "\n");
            reportWriter.write("Ventas:\n");

            String sale;
            while ((sale = salesReader.readLine()) != null) {
                reportWriter.write(sale + "\n");
            }
            salesReader.close();
            reportWriter.close();
        }
        reader.close();
    }

    /**
     * Genera un reporte general con la suma de las ventas de todos los vendedores.
     */
    private static void generateOverallReport() throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader("vendedores/info_vendedores.txt"));
        FileWriter overallWriter = new FileWriter("reportes/reporte_general.txt");

        overallWriter.write("Reporte General de Ventas\n");
        overallWriter.write("-------------------------\n");

        String line;
        while ((line = reader.readLine()) != null) {
            String[] vendorInfo = line.split(";");
            long id = Long.parseLong(vendorInfo[1]);
            BufferedReader salesReader = new BufferedReader(new FileReader("ventas/ventas_" + id + ".txt"));

            overallWriter.write("Ventas para Vendedor: " + vendorInfo[2] + " " + vendorInfo[3] + "\n");

            String sale;
            while ((sale = salesReader.readLine()) != null) {
                overallWriter.write(sale + "\n");
            }
            salesReader.close();
        }
        overallWriter.close();
        reader.close();
    }
}
